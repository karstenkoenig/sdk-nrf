name: Documentation Build

on:
  pull_request:
    types: [opened, synchronize, reopened]
  branches:
    - haltium-ncs
  paths:
    - '.github/workflows/docbuild.yml'
    - '**.rst'
    - '**/Kconfig'
    - 'doc/**'
    - 'include/**'
    - 'scripts/requirements-doc.txt'
    - 'west.yml'
  push:
    branches:
      - haltium-ncs

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/haltium-ncs' }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
        with:
          path: ncs/nrf
          fetch-depth: 0
      - name: cache-pip
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-doc-pip
      # Doxygen >= 1.8.18 is required. This can be removed once ubuntu-latest ships
      # a compatible version. More details: https://github.com/doxygen/doxygen/issues/7411.
      - name: Install packages
        run: |
          sudo apt update
          sudo apt-get install -y ninja-build mscgen plantuml
          DOXYGEN_VERSION=$(cat ./ncs/nrf/scripts/tools-versions-linux.txt |grep 'doxygen' | sed 's/^.*=//')
          wget --no-verbose https://downloads.sourceforge.net/project/doxygen/rel-${DOXYGEN_VERSION}/doxygen-${DOXYGEN_VERSION}.linux.bin.tar.gz
          tar xf doxygen-${DOXYGEN_VERSION}.linux.bin.tar.gz
          echo "${PWD}/doxygen-${DOXYGEN_VERSION}/bin" >> $GITHUB_PATH

      - name: Install base dependencies
        working-directory: ncs
        run: |
          sudo pip3 install -U setuptools wheel pip
          pip3 install -r nrf/scripts/requirements-base.txt

      - name: West init and update
        working-directory: ncs
        run: |
          # add credentials
          git config --global credential.helper ""
          git config --global --add credential.helper store
          echo "https://x-access-token:${{ secrets.NCS_GITHUB_TOKEN }}@github.com" >> ~/.git-credentials
          # init & update
          west init -l nrf
          west update
          west zephyr-export

      - name: Install documentation dependencies
        working-directory: ncs
        run: |
          pip3 install -r zephyr/scripts/requirements-doc.txt -r nrf/scripts/requirements-doc.txt

      - name: Build documentation
        working-directory: ncs/nrf
        run: |
          cmake -GNinja -Bdoc/_build -Sdoc -DSPHINXOPTS_EXTRA="-W"
          ninja -C doc/_build
          tar cfJ html-output.tar.xz --directory=doc/_build html

      - name: Archive build
        uses: actions/upload-artifact@v2
        with:
          name: docs
          path: ncs/nrf/html-output.tar.xz
