.. _ug_nrf54h20_suit_mcuboot_compare:

DFU and bootloader comparison
*****************************

The Nordic Semiconductor implementation of the :ref:`SUIT procedure <ug_nrf54h20_suit_intro>` is the only support bootloader and Device Firmware Update (DFU) procedure for the nRF54H Series of System on Chips (SoC).
It provides a more flexible and tailored DFU experience compared to the MCUboot procedure to better fit the needs of the SoC's multiple cores and transports.
See the diagram and comparison table below for further comparison.

.. figure:: images/nrf54h20_suit_mcuboot_comparison.png
   :alt: MCUboot and SUIT architecture comparison

   MCUboot and SUIT architecture comparison

+----------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------+
| Action               |  MCUboot characteristics                                                                                                                              | SUIT characteristics                                                                                                                      |
+======================+=======================================================================================================================================================+===========================================================================================================================================+
| Customization        | Built by users, where partitions are customized using Kconfig in the source code and becomes static.                                                  | SDFW built by Nordic Semiconductor and will be delivered in binary form.                                                                  |
|                      |                                                                                                                                                       | SDFW behavior can be customized by users by using configuration data written to the IC register (xICR) and logic in the SUIT manifest(s). |
+----------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------+
| Slot management      | Follows a "symmetrical" primary and secondary slot style, where there is a secondary slot for each update candidate and a corresponding primary slot. | Contains a single DFU partition, where components act as slots and the DFU partition copies images to the designated component(s).        |
|                      | The DFU is copied and swapped between the slots accordingly:                                                                                          | Additionally:                                                                                                                             |
|                      |                                                                                                                                                       |                                                                                                                                           |
|                      | * Primary slot is where the system is executed from.                                                                                                  | * The DFU partition size can be located anywhere in the non-volatile memory, accessible in the application core                           |
|                      | * Secondary slot is the destination for the DFU.                                                                                                      | * Information about location of the DFU is thus not hardcoded in the SDFW and can be changed between updates in the system                |
|                      |                                                                                                                                                       | * The DFU partition is where the update candidate is stored for the purpose of a system update                                            |
+----------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------+
| Slot characteristics | Has the same amount and size of primary and secondary slots (a one-to-one match).                                                                     | Has a single DFU partition and multiple components where their sizes can be customized.                                                   |
|                      | This leads to high non-volatile memory overhead due to the secondary slots.                                                                           | This allows for non-volatile memory overhead to be minimized (especially for multi-component devices, such as IP-connected devices).      |
+----------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------+
| Slot definition      | Definition of slots (their location and size) is statically compiled into MCUboot, making it difficult to change for devices deployed to the field.   | There is a technical possibility to change the definition of components (the location and size) between each update.                      |
+----------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------+
| Invocation process   | Behavior of the invocation process instrumentation abilities are limited through the image's metadata.                                                | Behavior of the invocation process can be relatively deeply instrumented within the manifest.                                             |
+----------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------+
